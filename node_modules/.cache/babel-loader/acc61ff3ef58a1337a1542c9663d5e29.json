{"ast":null,"code":"var _jsxFileName = \"/Users/Adeel/airpollution/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Button, Input, Table } from 'semantic-ui-react';\nimport TableExamplePagination from './TableExamplePagination'; //https://api.openaq.org/v1/cities\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [city1Results, setCity1Results] = useState([]);\n  const [city2Results, setCity2Results] = useState([]);\n  const [city1, setCity1] = useState(\"\");\n  const [city2, setCity2] = useState(\"\");\n  const [city1data, setCity1Data] = useState([]);\n  const [city2data, setCity2Data] = useState([]);\n\n  function getCitiesList() {\n    const countryURL = 'https://api.openaq.org/v2/locations/';\n    fetch(countryURL + city1).then(response => response.json()).then(data => {\n      setCity1Data(data);\n    });\n\n    const func1 = async () => {\n      fetch(countryURL + city2).then(response => response.json()).then(data => {\n        setCity2Data(data);\n      });\n      await func1;\n    };\n\n    if (city1data.length !== 0 && city1data.results.length !== 0) {\n      console.log(city1data);\n      let results = [];\n      city1data.results[0].parameters.forEach(item => results = [...results, item]);\n      setCity1Results(results);\n    }\n\n    if (city2data.length !== 0 && city2data.results.length !== 0) {\n      console.log(city2data);\n      let results = [];\n      city2data.results[0].parameters.forEach(item => results = [...results, item]);\n      setCity2Results(results);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter a city code\",\n        onChange: e => setCity1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter a city code\",\n        style: {\n          padding: 10\n        },\n        onChange: e => setCity2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: getCitiesList,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableExamplePagination, {\n        data: city1Results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableExamplePagination, {\n        data: city2Results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 10\n        },\n        children: city1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2h8PmTfUtgwMxbdeUdMszgoowss=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Adeel/airpollution/src/App.js"],"names":["React","useState","useEffect","Button","Input","Table","TableExamplePagination","App","city1Results","setCity1Results","city2Results","setCity2Results","city1","setCity1","city2","setCity2","city1data","setCity1Data","city2data","setCity2Data","getCitiesList","countryURL","fetch","then","response","json","data","func1","length","results","console","log","parameters","forEach","item","e","target","value","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Input, Table } from 'semantic-ui-react'\nimport TableExamplePagination from './TableExamplePagination'\n\n\n\n\n//https://api.openaq.org/v1/cities\n\n\nfunction App() {\n  const [city1Results, setCity1Results] = useState([]);\n  const [city2Results, setCity2Results] = useState([]);\n  const [city1, setCity1] = useState(\"\");\n  const [city2, setCity2] = useState(\"\");\n  const [city1data, setCity1Data] = useState([]);\n  const [city2data, setCity2Data] = useState([]);\n\n  function getCitiesList() {\n    const countryURL = 'https://api.openaq.org/v2/locations/';\n    fetch(countryURL + city1)\n      .then(response => response.json()).then(data => { setCity1Data(data) });\n\n    const func1 = async () => {\n      fetch(countryURL + city2)\n        .then(response => response.json()).then(data => { setCity2Data(data) });\n      await func1;\n    }\n    if (city1data.length !== 0 && city1data.results.length !== 0) {\n      console.log(city1data)\n      let results = [];\n      city1data.results[0].parameters.forEach(item => results = [...results, item]);\n      setCity1Results(results);\n    }\n\n    if (city2data.length !== 0 && city2data.results.length !== 0) {\n      console.log(city2data)\n      let results = [];\n      city2data.results[0].parameters.forEach(item => results = [...results, item]);\n      setCity2Results(results);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <Input placeholder={\"Enter a city code\"} onChange={e => setCity1(e.target.value)}></Input>\n        <Input placeholder={\"Enter a city code\"} style={{ padding: 10 }} onChange={e => setCity2(e.target.value)}></Input>\n        <Button onClick={getCitiesList}>{\"Enter\"}</Button>\n\n        <TableExamplePagination data={city1Results}></TableExamplePagination>\n        <TableExamplePagination data={city2Results}></TableExamplePagination>\n\n\n        <div style={{ padding: 10 }}>{city1}</div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <div></div>\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}