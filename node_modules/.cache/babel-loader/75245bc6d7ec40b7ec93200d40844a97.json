{"ast":null,"code":"var _jsxFileName = \"/Users/Adeel/airpollution/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Button, Input, Table } from 'semantic-ui-react';\nimport TableExamplePagination from './TableExamplePagination'; //https://api.openaq.org/v1/cities\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const test = [\"test\"];\n  const [cityData, setCityData] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [city1, setCity1] = useState(\"\");\n  const [city2, setCity2] = useState(\"\");\n  const [city1data, setCity1Data] = useState([]); // useEffect(() => {\n  //   const countryURL = 'https://api.openaq.org/v1/cities';\n  //   fetch(countryURL)\n  //     .then(response => response.json()).then(data => { console.log(data) });\n  // });\n\n  const options = {\n    method: 'GET',\n    body: JSON.stringify(city1)\n  };\n\n  function getCitiesList() {\n    const countryURL = 'https://api.openaq.org/v2/locations/';\n    fetch(countryURL + city1).then(response => response.json()).then(data => {\n      setCity1Data(data);\n    });\n\n    if (city1data.length != 0 && city1data.length != 0) {\n      console.log(city1data);\n      getData1();\n    }\n  }\n\n  function getCityNames(data) {\n    let cityNames = [];\n    data.results.forEach(item => cityNames = [...cityNames, item.name]);\n    console.log(cityNames);\n    setCities(cityNames);\n    setCityData(data);\n  }\n\n  function getData1() {\n    let cityData = [];\n    city1data.results[0].parameters.forEach(item => cityData = [...cityData, item]);\n    setCity1Data(cityData);\n    console.log(cityData);\n    console.log(test);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter a city code\",\n        onChange: e => setCity1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter a city code\",\n        style: {\n          padding: 10\n        },\n        onChange: e => setCity2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: getCitiesList,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Array.from(city1data).map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableExamplePagination, {\n        data: test\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 10\n        },\n        children: city1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xBtQbglkij3n0CobYTzaa9g8tus=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Adeel/airpollution/src/App.js"],"names":["React","useState","useEffect","Button","Input","Table","TableExamplePagination","App","test","cityData","setCityData","cities","setCities","city1","setCity1","city2","setCity2","city1data","setCity1Data","options","method","body","JSON","stringify","getCitiesList","countryURL","fetch","then","response","json","data","length","console","log","getData1","getCityNames","cityNames","results","forEach","item","name","parameters","e","target","value","padding","Array","from","map","row"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Input, Table } from 'semantic-ui-react'\nimport TableExamplePagination from './TableExamplePagination'\n\n\n\n\n//https://api.openaq.org/v1/cities\n\n\nfunction App() {\n  const test = [\"test\"];\n  const [cityData, setCityData] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [city1, setCity1] = useState(\"\");\n  const [city2, setCity2] = useState(\"\");\n  const [city1data, setCity1Data] = useState([]);\n\n  // useEffect(() => {\n  //   const countryURL = 'https://api.openaq.org/v1/cities';\n\n  //   fetch(countryURL)\n  //     .then(response => response.json()).then(data => { console.log(data) });\n\n  // });\n\n  const options = {\n    method: 'GET',\n    body: JSON.stringify(city1)\n  };\n  function getCitiesList() {\n    const countryURL = 'https://api.openaq.org/v2/locations/';\n    fetch(countryURL + city1)\n      .then(response => response.json()).then(data => { setCity1Data(data) });\n    if (city1data.length != 0 && city1data.length != 0) {\n      console.log(city1data)\n      getData1();\n    }\n  }\n\n\n  function getCityNames(data) {\n    let cityNames = [];\n    data.results.forEach(item => cityNames = [...cityNames, item.name]);\n    console.log(cityNames);\n    setCities(cityNames);\n    setCityData(data);\n  }\n\n  function getData1() {\n    let cityData = [];\n    city1data.results[0].parameters.forEach(item => cityData = [...cityData, item]);\n    setCity1Data(cityData);\n    console.log(cityData);\n    console.log(test);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <Input placeholder={\"Enter a city code\"} onChange={e => setCity1(e.target.value)}></Input>\n        <Input placeholder={\"Enter a city code\"} style={{ padding: 10 }} onChange={e => setCity2(e.target.value)}></Input>\n        <Button onClick={getCitiesList}>{\"Enter\"}</Button>\n        <div>\n          {Array.from(city1data).map((row) => <div>test</div>)}\n        </div>\n        <TableExamplePagination data={test}></TableExamplePagination>\n\n\n        <div style={{ padding: 10 }}>{city1}</div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <div></div>\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}