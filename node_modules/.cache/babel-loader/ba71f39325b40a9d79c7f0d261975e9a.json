{"ast":null,"code":"import _toConsumableArray from\"/Users/Adeel/airpollution/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/Adeel/airpollution/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import logo from\"./logo.svg\";import'./App.css';import{Button,Input,Table}from'semantic-ui-react';import TableExamplePagination from'./TableExamplePagination';//https://api.openaq.org/v1/cities\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cityData=_useState2[0],setCityData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cities=_useState4[0],setCities=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),city1=_useState6[0],setCity1=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),city2=_useState8[0],setCity2=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),city1data=_useState10[0],setCity1Data=_useState10[1];// useEffect(() => {\n//   const countryURL = 'https://api.openaq.org/v1/cities';\n//   fetch(countryURL)\n//     .then(response => response.json()).then(data => { console.log(data) });\n// });\nvar options={method:'GET',body:JSON.stringify(city1)};function getCitiesList(){var countryURL='https://api.openaq.org/v2/locations/';fetch(countryURL+city1).then(function(response){return response.json();}).then(function(data){setCity1Data(data);});if(city1data.length!=0&&city1data.results.length!=0){console.log(city1data.results[0].parameters);}}function getCityNames(data){var cityNames=[];data.results.forEach(function(item){return cityNames=[].concat(_toConsumableArray(cityNames),[item.name]);});console.log(cityNames);setCities(cityNames);setCityData(data);}return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(Input,{placeholder:\"Enter a city code\",onChange:function onChange(e){return setCity1(e.target.value);}}),/*#__PURE__*/_jsx(Input,{placeholder:\"Enter a city code\",style:{padding:10},onChange:function onChange(e){return setCity2(e.target.value);}}),/*#__PURE__*/_jsx(Button,{onClick:getCitiesList,children:\"Enter\"}),/*#__PURE__*/_jsx(TableExamplePagination,{}),/*#__PURE__*/_jsx(\"div\",{style:{padding:10},children:city1}),/*#__PURE__*/_jsx(\"a\",{className:\"App-link\",href:\"https://reactjs.org\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"div\",{})})]})});}export default App;","map":{"version":3,"sources":["/Users/Adeel/airpollution/src/App.js"],"names":["React","useState","useEffect","Button","Input","Table","TableExamplePagination","App","cityData","setCityData","cities","setCities","city1","setCity1","city2","setCity2","city1data","setCity1Data","options","method","body","JSON","stringify","getCitiesList","countryURL","fetch","then","response","json","data","length","results","console","log","parameters","getCityNames","cityNames","forEach","item","name","e","target","value","padding"],"mappings":"wSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,6BAEA,MAAO,WAAP,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,KAAxB,KAAqC,mBAArC,CACA,MAAOC,CAAAA,sBAAP,KAAmC,0BAAnC,CAKA;wFAGA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAgCN,QAAQ,CAAC,EAAD,CAAxC,wCAAOO,QAAP,eAAiBC,WAAjB,eACA,eAA4BR,QAAQ,CAAC,EAAD,CAApC,yCAAOS,MAAP,eAAeC,SAAf,eACA,eAA0BV,QAAQ,CAAC,EAAD,CAAlC,yCAAOW,KAAP,eAAcC,QAAd,eACA,eAA0BZ,QAAQ,CAAC,EAAD,CAAlC,yCAAOa,KAAP,eAAcC,QAAd,eACA,eAAkCd,QAAQ,CAAC,EAAD,CAA1C,0CAAOe,SAAP,gBAAkBC,YAAlB,gBAEA;AACA;AAEA;AACA;AAEA;AAEA,GAAMC,CAAAA,OAAO,CAAG,CACdC,MAAM,CAAE,KADM,CAEdC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeV,KAAf,CAFQ,CAAhB,CAIA,QAASW,CAAAA,aAAT,EAAyB,CACvB,GAAMC,CAAAA,UAAU,CAAG,sCAAnB,CACAC,KAAK,CAACD,UAAU,CAAGZ,KAAd,CAAL,CACGc,IADH,CACQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADhB,EACqCF,IADrC,CAC0C,SAAAG,IAAI,CAAI,CAAEZ,YAAY,CAACY,IAAD,CAAZ,CAAoB,CADxE,EAEA,GAAIb,SAAS,CAACc,MAAV,EAAoB,CAApB,EAAyBd,SAAS,CAACe,OAAV,CAAkBD,MAAlB,EAA4B,CAAzD,CAA4D,CAC1DE,OAAO,CAACC,GAAR,CAAYjB,SAAS,CAACe,OAAV,CAAkB,CAAlB,EAAqBG,UAAjC,EACD,CACF,CAGD,QAASC,CAAAA,YAAT,CAAsBN,IAAtB,CAA4B,CAC1B,GAAIO,CAAAA,SAAS,CAAG,EAAhB,CACAP,IAAI,CAACE,OAAL,CAAaM,OAAb,CAAqB,SAAAC,IAAI,QAAIF,CAAAA,SAAS,8BAAOA,SAAP,GAAkBE,IAAI,CAACC,IAAvB,EAAb,EAAzB,EACAP,OAAO,CAACC,GAAR,CAAYG,SAAZ,EACAzB,SAAS,CAACyB,SAAD,CAAT,CACA3B,WAAW,CAACoB,IAAD,CAAX,CACD,CAED,mBACE,YAAK,SAAS,CAAC,KAAf,uBACE,gBAAQ,SAAS,CAAC,YAAlB,wBAEE,KAAC,KAAD,EAAO,WAAW,CAAE,mBAApB,CAAyC,QAAQ,CAAE,kBAAAW,CAAC,QAAI3B,CAAAA,QAAQ,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,EAApD,EAFF,cAGE,KAAC,KAAD,EAAO,WAAW,CAAE,mBAApB,CAAyC,KAAK,CAAE,CAAEC,OAAO,CAAE,EAAX,CAAhD,CAAiE,QAAQ,CAAE,kBAAAH,CAAC,QAAIzB,CAAAA,QAAQ,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,EAA5E,EAHF,cAIE,KAAC,MAAD,EAAQ,OAAO,CAAEnB,aAAjB,UAAiC,OAAjC,EAJF,cAKE,KAAC,sBAAD,IALF,cAOE,YAAK,KAAK,CAAE,CAAEoB,OAAO,CAAE,EAAX,CAAZ,UAA8B/B,KAA9B,EAPF,cAQE,UACE,SAAS,CAAC,UADZ,CAEE,IAAI,CAAC,qBAFP,CAGE,MAAM,CAAC,QAHT,CAIE,GAAG,CAAC,qBAJN,uBAME,cANF,EARF,GADF,EADF,CAqBD,CAED,cAAeL,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Input, Table } from 'semantic-ui-react'\nimport TableExamplePagination from './TableExamplePagination'\n\n\n\n\n//https://api.openaq.org/v1/cities\n\n\nfunction App() {\n  const [cityData, setCityData] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [city1, setCity1] = useState(\"\");\n  const [city2, setCity2] = useState(\"\");\n  const [city1data, setCity1Data] = useState([]);\n\n  // useEffect(() => {\n  //   const countryURL = 'https://api.openaq.org/v1/cities';\n\n  //   fetch(countryURL)\n  //     .then(response => response.json()).then(data => { console.log(data) });\n\n  // });\n\n  const options = {\n    method: 'GET',\n    body: JSON.stringify(city1)\n  };\n  function getCitiesList() {\n    const countryURL = 'https://api.openaq.org/v2/locations/';\n    fetch(countryURL + city1)\n      .then(response => response.json()).then(data => { setCity1Data(data) });\n    if (city1data.length != 0 && city1data.results.length != 0) {\n      console.log(city1data.results[0].parameters)\n    }\n  }\n\n\n  function getCityNames(data) {\n    let cityNames = [];\n    data.results.forEach(item => cityNames = [...cityNames, item.name]);\n    console.log(cityNames);\n    setCities(cityNames);\n    setCityData(data);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <Input placeholder={\"Enter a city code\"} onChange={e => setCity1(e.target.value)}></Input>\n        <Input placeholder={\"Enter a city code\"} style={{ padding: 10 }} onChange={e => setCity2(e.target.value)}></Input>\n        <Button onClick={getCitiesList}>{\"Enter\"}</Button>\n        <TableExamplePagination></TableExamplePagination>\n\n        <div style={{ padding: 10 }}>{city1}</div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <div></div>\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}