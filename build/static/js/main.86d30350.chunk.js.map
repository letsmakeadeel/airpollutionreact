{"version":3,"sources":["logo.svg","TableExamplePagination.js","App.js","reportWebVitals.js","index.js"],"names":["TableExamplePagination","Table","celled","Header","Row","HeaderCell","Body","Cell","Label","ribbon","Footer","colSpan","Menu","floated","pagination","Item","as","icon","Icon","name","App","useState","city1","setCity1","setCity2","city1data","setCity1Data","JSON","stringify","className","Input","placeholder","onChange","e","target","value","style","padding","Button","onClick","fetch","then","response","json","data","length","results","console","log","parameters","href","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86d30350.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react'\n\nconst TableExamplePagination = () => (\n    <Table celled>\n        <Table.Header>\n            <Table.Row>\n                <Table.HeaderCell>Header</Table.HeaderCell>\n                <Table.HeaderCell>Header</Table.HeaderCell>\n                <Table.HeaderCell>Header</Table.HeaderCell>\n            </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n            <Table.Row>\n                <Table.Cell>\n                    <Label ribbon>First</Label>\n                </Table.Cell>\n                <Table.Cell>Cell</Table.Cell>\n                <Table.Cell>Cell</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n                <Table.Cell>Cell</Table.Cell>\n                <Table.Cell>Cell</Table.Cell>\n                <Table.Cell>Cell</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n                <Table.Cell>Cell</Table.Cell>\n                <Table.Cell>Cell</Table.Cell>\n                <Table.Cell>Cell</Table.Cell>\n            </Table.Row>\n        </Table.Body>\n\n        <Table.Footer>\n            <Table.Row>\n                <Table.HeaderCell colSpan='3'>\n                    <Menu floated='right' pagination>\n                        <Menu.Item as='a' icon>\n                            <Icon name='chevron left' />\n                        </Menu.Item>\n                        <Menu.Item as='a'>1</Menu.Item>\n                        <Menu.Item as='a'>2</Menu.Item>\n                        <Menu.Item as='a'>3</Menu.Item>\n                        <Menu.Item as='a'>4</Menu.Item>\n                        <Menu.Item as='a' icon>\n                            <Icon name='chevron right' />\n                        </Menu.Item>\n                    </Menu>\n                </Table.HeaderCell>\n            </Table.Row>\n        </Table.Footer>\n    </Table>\n)\n\nexport default TableExamplePagination","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Input, Table } from 'semantic-ui-react'\nimport TableExamplePagination from './TableExamplePagination'\n\n\n\n\n//https://api.openaq.org/v1/cities\n\n\nfunction App() {\n  const [cityData, setCityData] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [city1, setCity1] = useState(\"\");\n  const [city2, setCity2] = useState(\"\");\n  const [city1data, setCity1Data] = useState([]);\n\n  // useEffect(() => {\n  //   const countryURL = 'https://api.openaq.org/v1/cities';\n\n  //   fetch(countryURL)\n  //     .then(response => response.json()).then(data => { console.log(data) });\n\n  // });\n\n  const options = {\n    method: 'GET',\n    body: JSON.stringify(city1)\n  };\n  function getCitiesList() {\n    const countryURL = 'https://api.openaq.org/v2/locations/';\n    fetch(countryURL + city1)\n      .then(response => response.json()).then(data => { setCity1Data(data) });\n    if (city1data.length != 0 && city1data.results.length != 0) {\n      console.log(city1data.results[0].parameters)\n    }\n  }\n\n\n  function getCityNames(data) {\n    let cityNames = [];\n    data.results.forEach(item => cityNames = [...cityNames, item.name]);\n    console.log(cityNames);\n    setCities(cityNames);\n    setCityData(data);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <Input placeholder={\"Enter a city code\"} onChange={e => setCity1(e.target.value)}></Input>\n        <Input placeholder={\"Enter a city code\"} style={{ padding: 10 }} onChange={e => setCity2(e.target.value)}></Input>\n        <Button onClick={getCitiesList}>{\"Enter\"}</Button>\n        <TableExamplePagination></TableExamplePagination>\n\n        <div style={{ padding: 10 }}>{city1}</div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <div></div>\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}